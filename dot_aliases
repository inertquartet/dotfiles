# Aliases 

# OS/platform specific
case "$OSTYPE" in
	darwin*) # Mac (OS X) 
		# Aliases
		alias killDS='find . -name *.DS_Store -type f -delete'
		alias flushdns='sudo dscacheutil -flushcache;sudo killall -HUP mDNSResponder'
		alias big='du -ah . | sort -rh | head -20' # Top 20 biggest files/directories in cwd
		alias big-files='ls -1Rhs | sed -e "s/^ *//" | grep "^[0-9]" | sort -rh | head -n20' # Top 20 biggest files/directories in cwd
		alias ds='du -hs * | gsort -rh' # find biggest file/dir in cwd
		alias ls='ls -GAFh' # colorized output, hidden dirs, human readable sizes, appent / to dir, * to executables, and @ to symlinks
		command -v md5sum > /dev/null || alias md5sum="md5" # OS X has no `md5sum`, so use `md5` as a fallback
		command -v sha1sum > /dev/null || alias sha1sum="shasum" # OS X has no `sha1sum`, so use `shasum` as a fallback

		;;
	linux*)
		alias big='du -ah . | sort -rh | head -20' # Top 20 biggest files/directories in cwd
		alias big-files='ls -1Rhs | sed -e "s/^ *//" | grep "^[0-9]" | sort -rh | head -n20' # Top 20 biggest files/directories in cwd
		alias ds='du -ks *|sort -rn' # find biggest file/dir in cwd
		alias ls='ls -AFh --color' # colorized output, hidden dirs, human readable sizes, appent / to dir, * to executables, and @ to symlinks
		;;
	bsd*) 
		;;
	*) 
		echo "Unknown: OSTYPE"
		;;
esac

#Generic
alias cp='cp -iv'
alias mv='mv -iv'
alias rm='rm -iv'
alias mkdir='mkdir -p -v'
alias freq='cut -f1 -d" " ~/.zhistory | sort | uniq -c | sort -nr | head -n 30' # Frequently used commands
alias netlisten='lsof -i -P | grep LISTEN' # Active network listeners
alias extip='dig +short myip.opendns.com @resolver1.opendns.com' # Or: ip.appspot.com # get external IP address
alias tmux='tmux -2' # Force 256 colors
alias grep='grep --color=auto'
alias path='echo $PATH | tr -s ":" "\n"

# Functions

# Go _u_p to the specified directory OR number of levels
u() {
	if [ -z "$1" ] 
	then
		cd ..
	elif echo "$1" | grep -q '[0-9]\+'
	then
		cd "$(pwd | gawk 'BEGIN{FS=OFS="/"}NF>'$1'{NF-='$1'}NF==1{print"/"}NF>1')"
	else
		cd "$(pwd | gawk 'BEGIN{FS=OFS="/"}{for(i=NF;i>1;i--){if($i ~ "'$1'"){NF=i;break}}}1')"
	fi
	pwd
}

# Go _d_own to the specified directory name
d() {
	cd $(find . -type d -name "$1" -print -quit 2>/dev/null)
	pwd
}

mkcd() {
	mkdir -p "$1" && cd "$1"
}

# Extract file based on file type
extract() {
    if [ -f $1 ] ; then
	case $1 in
	    *.tar.bz2)	tar xjf	    $1  ;;
	    *.tar.gz)	tar xzf	    $1  ;;
	    *.bz2)	bunzip2	    $1  ;;
	    *.rar)	rar x	    $1  ;;
	    *.gz)	gunzip	    $1  ;;
	    *.tar)	tar xf	    $1  ;;
	    *.tbz2)	tar xjf	    $1  ;;
	    *.tgz)	tar xzf	    $1  ;;
	    *.zip)	unzip	    $1  ;;
	    *.Z)	uncompress  $1	;;
	    *.7z)	7z x	    $1	;;
	    *)		echo "'$1' cannot be extracted via extract()"	;;
	esac
    else
	echo "'$1' is not a valid file"
    fi
}

# Show all lines of stdout/file and highlight matches
highlight() {
    ack --passthru --color "$1" "$2"
}